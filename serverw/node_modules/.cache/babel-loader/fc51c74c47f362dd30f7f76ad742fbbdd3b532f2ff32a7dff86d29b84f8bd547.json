{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  console.error('API Request Error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  console.log(`API Response: ${response.status} ${response.config.url}`);\n  return response;\n}, error => {\n  var _error$response;\n  console.error('API Response Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\n\n// Auth API calls\nexport const authAPI = {\n  login: phoneData => api.post('/auth/login', phoneData),\n  getUser: userId => api.get(`/auth/user/${userId}`)\n};\n\n// Inventory API calls\nexport const inventoryAPI = {\n  add: foodData => api.post('/inventory/add', foodData),\n  list: userId => api.get(`/inventory/list/${userId}`),\n  update: (id, updateData) => api.put(`/inventory/${id}`, updateData),\n  delete: id => api.delete(`/inventory/${id}`)\n};\n\n// Classification API calls\nexport const classifyAPI = {\n  classifyImage: formData => api.post('/classify/image', formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  getCategories: () => api.get('/classify/categories'),\n  deleteImage: filename => api.delete(`/classify/image/${filename}`)\n};\n\n// Marketplace API calls\nexport const marketplaceAPI = {\n  getBuyers: (params = {}) => api.get('/marketplace/buyers', {\n    params\n  }),\n  sell: transactionData => api.post('/marketplace/sell', transactionData),\n  getTransactions: (userId, params = {}) => api.get(`/marketplace/transactions/${userId}`, {\n    params\n  }),\n  updateTransactionStatus: (id, statusData) => api.put(`/marketplace/transaction/${id}/status`, statusData)\n};\n\n// Analytics API calls\nexport const analyticsAPI = {\n  getSummary: userId => api.get(`/analytics/summary/${userId}`),\n  getLeaderboard: (params = {}) => api.get('/analytics/leaderboard', {\n    params\n  }),\n  getGlobalStats: () => api.get('/analytics/global-stats')\n};\n\n// Health check\nexport const healthAPI = {\n  check: () => axios.get('http://localhost:5000/health')\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","status","_error$response","data","message","authAPI","login","phoneData","post","getUser","userId","get","inventoryAPI","add","foodData","list","update","id","updateData","put","delete","classifyAPI","classifyImage","formData","getCategories","deleteImage","filename","marketplaceAPI","getBuyers","params","sell","transactionData","getTransactions","updateTransactionStatus","statusData","analyticsAPI","getSummary","getLeaderboard","getGlobalStats","healthAPI","check"],"sources":["C:/Users/91939/Desktop/worthywaste/serverw/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance with base configuration\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:5000/api',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor for logging\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('API Request Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log(`API Response: ${response.status} ${response.config.url}`);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('API Response Error:', error.response?.data || error.message);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API calls\r\nexport const authAPI = {\r\n  login: (phoneData) => api.post('/auth/login', phoneData),\r\n  getUser: (userId) => api.get(`/auth/user/${userId}`),\r\n};\r\n\r\n// Inventory API calls\r\nexport const inventoryAPI = {\r\n  add: (foodData) => api.post('/inventory/add', foodData),\r\n  list: (userId) => api.get(`/inventory/list/${userId}`),\r\n  update: (id, updateData) => api.put(`/inventory/${id}`, updateData),\r\n  delete: (id) => api.delete(`/inventory/${id}`),\r\n};\r\n\r\n// Classification API calls\r\nexport const classifyAPI = {\r\n  classifyImage: (formData) => api.post('/classify/image', formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  }),\r\n  getCategories: () => api.get('/classify/categories'),\r\n  deleteImage: (filename) => api.delete(`/classify/image/${filename}`),\r\n};\r\n\r\n// Marketplace API calls\r\nexport const marketplaceAPI = {\r\n  getBuyers: (params = {}) => api.get('/marketplace/buyers', { params }),\r\n  sell: (transactionData) => api.post('/marketplace/sell', transactionData),\r\n  getTransactions: (userId, params = {}) => api.get(`/marketplace/transactions/${userId}`, { params }),\r\n  updateTransactionStatus: (id, statusData) => api.put(`/marketplace/transaction/${id}/status`, statusData),\r\n};\r\n\r\n// Analytics API calls\r\nexport const analyticsAPI = {\r\n  getSummary: (userId) => api.get(`/analytics/summary/${userId}`),\r\n  getLeaderboard: (params = {}) => api.get('/analytics/leaderboard', { params }),\r\n  getGlobalStats: () => api.get('/analytics/global-stats'),\r\n};\r\n\r\n// Health check\r\nexport const healthAPI = {\r\n  check: () => axios.get('http://localhost:5000/health'),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}